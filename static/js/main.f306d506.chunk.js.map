{"version":3,"sources":["assets/move-sound.wav","constants/index.js","selectors/getWhiteDirection.js","selectors/getBlackDirection.js","selectors/getKingDirection.js","stores/CheckersStore.js","components/KingIcon.js","components/Piece.js","components/Checkers.js","utilities/createSound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","WHITE","board","position","mustCapture","availablePositions","leftCode","row","column","R","undefined","push","captured","getLeftDirection","rightCode","getRightDirection","getEnemyCode","code","enemyCode","calculatePosition","calculateCode","getLeftTopDirection","getRightTopDirection","getLeftBottomDirection","getRightBottomDirection","checker","isKing","black","white","empty","initialBoard","CheckersStore","turn","selected","isContinouse","this","newPosition","piece","getAvailablePositions","getAvailablePieces","getKingDirection","getWhiteDirection","getBlackDirection","availablePieces","allPieces","forEach","columns","getDirection","directions","onlyCapturedDirections","direction","length","decorate","observable","computed","getWinner","clickOnPiece","action","move","reset","KingIcon","size","color","props","viewBox","width","height","fill","d","Circle","styled","div","active","enabled","inject","observer","checkersStore","ratio","Fragment","onClick","moveSound","src","play","sound","stop","pause","currentTime","Audio","require","Wrapper","Square","dark","Array","keys","map","availablePosition","key","Title","h1","Turn","p","Link","a","winner","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f306d506.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/move-sound.07bef98b.wav\";","export const BLACK = 'b'\nexport const WHITE = 'w'\nexport const EMPTY = ''\n","import * as R from 'ramda'\nimport { BLACK, EMPTY } from '../constants'\n\nconst getLeftDirection = (board, position, mustCapture) => {\n  const availablePositions = []\n  const leftCode =\n    position.row - 1 >= 0 && position.column - 1 >= 0\n      ? R.path([position.row - 1, position.column - 1, 'code'])(board)\n      : undefined\n  if (!mustCapture && leftCode === EMPTY) {\n    availablePositions.push({\n      row: position.row - 1,\n      column: position.column - 1,\n    })\n  } else if (\n    leftCode === BLACK &&\n    position.row - 2 >= 0 &&\n    position.column - 2 >= 0 &&\n    R.path([position.row - 2, position.column - 2, 'code'])(board) === EMPTY\n  ) {\n    availablePositions.push({\n      row: position.row - 2,\n      column: position.column - 2,\n      captured: { row: position.row - 1, column: position.column - 1 },\n    })\n  }\n  return availablePositions\n}\n\nconst getRightDirection = (board, position, mustCapture) => {\n  const availablePositions = []\n  const rightCode =\n    position.row - 1 >= 0 && position.column + 1 <= 7\n      ? R.path([position.row - 1, position.column + 1, 'code'])(board)\n      : undefined\n  if (!mustCapture && rightCode === EMPTY) {\n    availablePositions.push({\n      row: position.row - 1,\n      column: position.column + 1,\n    })\n  } else if (\n    rightCode === BLACK &&\n    position.row - 2 >= 0 &&\n    position.column + 2 <= 7 &&\n    R.path([position.row - 2, position.column + 2, 'code'])(board) === EMPTY\n  ) {\n    availablePositions.push({\n      row: position.row - 2,\n      column: position.column + 2,\n      captured: { row: position.row - 1, column: position.column + 1 },\n    })\n  }\n  return availablePositions\n}\n\nexport default (board, position, mustCapture) => [\n  ...getLeftDirection(board, position, mustCapture),\n  ...getRightDirection(board, position, mustCapture),\n]\n","import * as R from 'ramda'\nimport { WHITE, EMPTY } from '../constants'\n\nconst getLeftDirection = (board, position, mustCapture) => {\n  const availablePositions = []\n  const leftCode =\n    position.row + 1 <= 7 && position.column - 1 >= 0\n      ? R.path([position.row + 1, position.column - 1, 'code'])(board)\n      : undefined\n  if (!mustCapture && leftCode === EMPTY) {\n    availablePositions.push({\n      row: position.row + 1,\n      column: position.column - 1,\n    })\n  } else if (\n    leftCode === WHITE &&\n    position.row + 2 <= 7 &&\n    position.column - 2 >= 0 &&\n    R.path([position.row + 2, position.column - 2, 'code'])(board) === EMPTY\n  ) {\n    availablePositions.push({\n      row: position.row + 2,\n      column: position.column - 2,\n      captured: { row: position.row + 1, column: position.column - 1 },\n    })\n  }\n  return availablePositions\n}\n\nconst getRightDirection = (board, position, mustCapture) => {\n  const availablePositions = []\n  const rightCode =\n    position.row + 1 <= 7 && position.column + 1 <= 7\n      ? R.path([position.row + 1, position.column + 1, 'code'])(board)\n      : undefined\n  if (!mustCapture && rightCode === EMPTY) {\n    availablePositions.push({\n      row: position.row + 1,\n      column: position.column + 1,\n    })\n  } else if (\n    rightCode === WHITE &&\n    position.row + 2 <= 7 &&\n    position.column + 2 <= 7 &&\n    R.path([position.row + 2, position.column + 2, 'code'])(board) === EMPTY\n  ) {\n    availablePositions.push({\n      row: position.row + 2,\n      column: position.column + 2,\n      captured: { row: position.row + 1, column: position.column + 1 },\n    })\n  }\n  return availablePositions\n}\n\nexport default (board, position, mustCapture) => [\n  ...getLeftDirection(board, position, mustCapture),\n  ...getRightDirection(board, position, mustCapture),\n]\n","import * as R from 'ramda'\nimport { BLACK, WHITE, EMPTY } from '../constants'\n\nconst getEnemyCode = code => (code === WHITE ? BLACK : WHITE)\n\nconst getLeftTopDirection = (code, board, position, mustCapture) => {\n  const availablePositions = []\n  const enemyCode = getEnemyCode(code)\n\n  let calculatePosition = { row: position.row - 1, column: position.column - 1 }\n  while (calculatePosition.row >= 0 && calculatePosition.column >= 0) {\n    const calculateCode = R.path([\n      calculatePosition.row,\n      calculatePosition.column,\n      'code',\n    ])(board)\n    if (!mustCapture && calculateCode === EMPTY) {\n      availablePositions.push(calculatePosition)\n    } else if (calculateCode === enemyCode) {\n      if (\n        calculatePosition.row - 1 >= 0 &&\n        calculatePosition.column - 1 >= 0 &&\n        R.path([\n          calculatePosition.row - 1,\n          calculatePosition.column - 1,\n          'code',\n        ])(board) === EMPTY\n      ) {\n        availablePositions.push({\n          row: calculatePosition.row - 1,\n          column: calculatePosition.column - 1,\n          captured: calculatePosition,\n        })\n      }\n      break\n    } else if (calculateCode === code) break\n    calculatePosition = {\n      row: calculatePosition.row - 1,\n      column: calculatePosition.column - 1,\n    }\n  }\n  return availablePositions\n}\n\nconst getRightTopDirection = (code, board, position, mustCapture) => {\n  const availablePositions = []\n  const enemyCode = getEnemyCode(code)\n\n  let calculatePosition = { row: position.row - 1, column: position.column + 1 }\n  while (calculatePosition.row >= 0 && calculatePosition.column <= 7) {\n    const calculateCode = R.path([\n      calculatePosition.row,\n      calculatePosition.column,\n      'code',\n    ])(board)\n    if (!mustCapture && calculateCode === EMPTY) {\n      availablePositions.push(calculatePosition)\n    } else if (calculateCode === enemyCode) {\n      if (\n        calculatePosition.row - 1 >= 0 &&\n        calculatePosition.column + 1 <= 7 &&\n        R.path([\n          calculatePosition.row - 1,\n          calculatePosition.column + 1,\n          'code',\n        ])(board) === EMPTY\n      ) {\n        availablePositions.push({\n          row: calculatePosition.row - 1,\n          column: calculatePosition.column + 1,\n          captured: calculatePosition,\n        })\n      }\n      break\n    } else if (calculateCode === code) break\n    calculatePosition = {\n      row: calculatePosition.row - 1,\n      column: calculatePosition.column + 1,\n    }\n  }\n  return availablePositions\n}\n\nconst getLeftBottomDirection = (code, board, position, mustCapture) => {\n  const availablePositions = []\n  const enemyCode = getEnemyCode(code)\n\n  let calculatePosition = { row: position.row + 1, column: position.column - 1 }\n  while (calculatePosition.row <= 7 && calculatePosition.column >= 0) {\n    const calculateCode = R.path([\n      calculatePosition.row,\n      calculatePosition.column,\n      'code',\n    ])(board)\n    if (!mustCapture && calculateCode === EMPTY) {\n      availablePositions.push(calculatePosition)\n    } else if (calculateCode === enemyCode) {\n      if (\n        calculatePosition.row + 1 <= 7 &&\n        calculatePosition.column - 1 >= 0 &&\n        R.path([\n          calculatePosition.row + 1,\n          calculatePosition.column - 1,\n          'code',\n        ])(board) === EMPTY\n      ) {\n        availablePositions.push({\n          row: calculatePosition.row + 1,\n          column: calculatePosition.column - 1,\n          captured: calculatePosition,\n        })\n      }\n      break\n    } else if (calculateCode === code) break\n    calculatePosition = {\n      row: calculatePosition.row + 1,\n      column: calculatePosition.column - 1,\n    }\n  }\n  return availablePositions\n}\n\nconst getRightBottomDirection = (code, board, position, mustCapture) => {\n  const availablePositions = []\n  const enemyCode = getEnemyCode(code)\n\n  let calculatePosition = { row: position.row + 1, column: position.column + 1 }\n  while (calculatePosition.row <= 7 && calculatePosition.column <= 7) {\n    const calculateCode = R.path([\n      calculatePosition.row,\n      calculatePosition.column,\n      'code',\n    ])(board)\n    if (!mustCapture && calculateCode === EMPTY) {\n      availablePositions.push(calculatePosition)\n    } else if (calculateCode === enemyCode) {\n      if (\n        calculatePosition.row + 1 <= 7 &&\n        calculatePosition.column + 1 <= 7 &&\n        R.path([\n          calculatePosition.row + 1,\n          calculatePosition.column + 1,\n          'code',\n        ])(board) === EMPTY\n      ) {\n        availablePositions.push({\n          row: calculatePosition.row + 1,\n          column: calculatePosition.column + 1,\n          captured: calculatePosition,\n        })\n      }\n      break\n    } else if (calculateCode === code) break\n    calculatePosition = {\n      row: calculatePosition.row + 1,\n      column: calculatePosition.column + 1,\n    }\n  }\n  return availablePositions\n}\n\nexport default (code, board, position, mustCapture) => [\n  ...getLeftTopDirection(code, board, position, mustCapture),\n  ...getRightTopDirection(code, board, position, mustCapture),\n  ...getLeftBottomDirection(code, board, position, mustCapture),\n  ...getRightBottomDirection(code, board, position, mustCapture),\n]\n","import * as R from 'ramda'\nimport { decorate, observable, computed, action } from 'mobx'\nimport { BLACK, WHITE, EMPTY } from '../constants'\nimport getWhiteDirection from '../selectors/getWhiteDirection'\nimport getBlackDirection from '../selectors/getBlackDirection'\nimport getKingDirection from '../selectors/getKingDirection'\n\nconst checker = (code, isKing = false) => ({ code, isKing })\nconst black = checker(BLACK)\nconst white = checker(WHITE)\nconst empty = checker(EMPTY)\n\nconst initialBoard = [\n  [empty, black, empty, black, empty, black, empty, black],\n  [black, empty, black, empty, black, empty, black, empty],\n  [empty, empty, empty, empty, empty, empty, empty, empty],\n  [empty, empty, empty, empty, empty, empty, empty, empty],\n  [empty, empty, empty, empty, empty, empty, empty, empty],\n  [empty, empty, empty, empty, empty, empty, empty, empty],\n  [empty, white, empty, white, empty, white, empty, white],\n  [white, empty, white, empty, white, empty, white, empty],\n]\n\nclass CheckersStore {\n  board = initialBoard\n  turn = WHITE\n  selected = null\n  isContinouse = false\n\n  get getAvailablePieces() {\n    const availablePieces = []\n    const allPieces = []\n    this.board.forEach((columns, row) => {\n      columns.forEach((piece, column) => {\n        const position = { row, column }\n        if (piece.code === this.turn) {\n          if (\n            !R.isEmpty(\n              this.getDirection(piece, this.turn, this.board, position, false),\n            )\n          )\n            allPieces.push(position)\n          if (\n            !R.isEmpty(\n              this.getDirection(piece, this.turn, this.board, position, true),\n            )\n          )\n            availablePieces.push(position)\n        }\n      })\n    })\n    return R.isEmpty(availablePieces) ? allPieces : availablePieces\n  }\n\n  get getAvailablePositions() {\n    if (this.selected) {\n      const piece = this.board[this.selected.row][this.selected.column]\n      const directions = this.getDirection(\n        piece,\n        this.turn,\n        this.board,\n        this.selected,\n        this.isContinouse,\n      )\n      const onlyCapturedDirections = R.filter(direction => direction.captured)(directions)\n      return R.isEmpty(onlyCapturedDirections) ? directions: onlyCapturedDirections\n    }\n    return []\n  }\n\n  get getWinner() {\n    if (!R.filter(({ code }) => code === BLACK)(R.flatten(this.board)).length)\n      return WHITE\n    if (!R.filter(({ code }) => code === WHITE)(R.flatten(this.board)).length)\n      return BLACK\n    return undefined\n  }\n\n  clickOnPiece(code, position) {\n    if (this.turn === code) {\n      this.selected = R.equals(this.selected)(position) ? null : position\n    }\n  }\n\n  move({ captured, ...newPosition }) {\n    // move\n    const piece = this.board[this.selected.row][this.selected.column]\n    this.board[this.selected.row][this.selected.column] = empty\n    this.board[newPosition.row][newPosition.column] = piece\n\n    // captured enemy piece\n    if (captured) {\n      this.board[captured.row][captured.column] = empty\n      this.selected = newPosition\n      this.isContinouse = true\n      if (!R.isEmpty(this.getAvailablePositions)) return\n    }\n\n    // isKing\n    if (this.turn === WHITE && newPosition.row === 0)\n      this.board[newPosition.row][newPosition.column].isKing = true\n    else if (this.turn === BLACK && newPosition.row === 7)\n      this.board[newPosition.row][newPosition.column].isKing = true\n\n    // end turn\n    this.turn = this.turn === WHITE ? BLACK : WHITE\n    this.selected = null\n    this.isContinouse = false\n    if (R.isEmpty(this.getAvailablePieces))\n      this.turn = this.turn === WHITE ? BLACK : WHITE\n  }\n\n  reset() {\n    this.board = initialBoard\n    this.turn = WHITE\n    this.selected = null\n    this.isContinouse = false\n  }\n\n  getDirection(piece, code, board, position, mustCapture) {\n    if (piece.isKing)\n      return getKingDirection(code, board, position, mustCapture)\n    if (piece.code === WHITE)\n      return getWhiteDirection(board, position, mustCapture)\n    return getBlackDirection(board, position, mustCapture)\n  }\n}\n\ndecorate(CheckersStore, {\n  // observable\n  board: observable,\n  turn: observable,\n  selected: observable,\n\n  // computed\n  getAvailablePieces: computed,\n  getAvailablePositions: computed,\n  getWinner: computed,\n\n  // action\n  clickOnPiece: action,\n  move: action,\n  reset: action,\n})\n\nexport default CheckersStore\n","import React from 'react'\n\nconst KingIcon = ({ size='1em', color='Black', ...props }) => (\n  <svg {...props} viewBox=\"0 0 472.615 472.615\" width={size} height={size}>\n    <path fill={color} d=\"M436.475 103.262c-19.961 0-36.141 16.18-36.141 36.141 0 9.776 3.92 18.613 10.226 25.12l-74.195 71.928-76.969-122.068c12.207-7.695 20.378-21.202 20.378-36.7 0-24.005-19.46-43.467-43.466-43.467-24.005 0-43.465 19.462-43.465 43.467 0 15.468 8.139 28.961 20.31 36.666L136.215 236.45 62.05 164.528c6.311-6.505 10.232-15.346 10.232-25.125 0-19.961-16.181-36.141-36.141-36.141S0 119.442 0 139.403c0 19.959 16.181 36.139 36.141 36.139 2.196 0 4.322-.272 6.411-.647l34.27 166.474h318.972l34.27-166.474c2.088.378 4.215.647 6.412.647 19.96 0 36.14-16.18 36.14-36.139-.001-19.961-16.181-36.141-36.141-36.141zM391.714 361.061H80.875l-18.767 77.337h348.373z\" />\n  </svg>\n)\n\nexport default KingIcon\n","import * as R from 'ramda'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { observer, inject } from 'mobx-react'\nimport { BLACK } from '../constants'\nimport KingIcon from './KingIcon'\n\nconst Circle = styled.div`\n  background-color: ${props => (props.code === BLACK ? 'Black' : 'White')};\n  box-shadow: ${props => (props.active ? '0 0 10px DarkOrange' : 'none')};\n  width: ${props => props.size}%;\n  height: ${props => props.size}%;\n  border-radius: 100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: ${props => (!props.enabled && props.code === props.turn ? 0.5 : 1)};\n  cursor: ${props => (props.enabled ? 'pointer' : 'default')};\n\n  &:after {\n    content: '';\n    width: 80%;\n    height: 80%;\n    top: 10%;\n    left: 10%;\n    position: absolute;\n    border: 1px solid\n      ${props => (props.code === BLACK ? 'LightGray' : 'DimGrey')};\n    border-radius: 100%;\n    box-sizing: border-box;\n  }\n`\n\nconst Piece = ({ checkersStore, checker, position, ratio = 0.9 }) => {\n  const availablePieces = checkersStore.getAvailablePieces\n  const enabled = R.includes(position)(availablePieces)\n  return (\n    <React.Fragment>\n      {checker.code ? (\n        <Circle\n          code={checker.code}\n          turn={checkersStore.turn}\n          enabled={enabled && checkersStore.turn === checker.code}\n          active={R.equals(checkersStore.selected)(position)}\n          size={ratio * 100}\n          onClick={() =>\n            enabled && checkersStore.clickOnPiece(checker.code, position)\n          }\n        >\n          {checker.isKing ? (\n            <KingIcon\n              color={checker.code === BLACK ? 'LightGray' : 'DimGrey'}\n              size={25}\n            />\n          ) : null}\n        </Circle>\n      ) : null}\n    </React.Fragment>\n  )\n}\n\nexport default inject('checkersStore')(observer(Piece))\n","import * as R from 'ramda'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { observer, inject } from 'mobx-react'\nimport sound from '../utilities/createSound'\nimport Piece from './Piece'\n\nconst moveSound = new sound(require('../assets/move-sound.wav'))\n\nconst Wrapper = styled.div`\n  width: calc(100vw - 20px);\n  height: calc(100vw - 20px);\n  max-width: ${props => props.size * 8}px;\n  max-height: ${props => props.size * 8}px;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n`\n\nconst Square = styled.div`\n  width: calc((100vw - 20px) / 8);\n  height: calc((100vw - 20px) / 8);\n  max-width: ${props => props.size}px;\n  max-height: ${props => props.size}px;\n  background: ${props => (props.dark ? 'DimGrey' : 'LightGrey')};\n  box-shadow: ${props => (props.active ? 'inset 0 0 10px DarkOrange' : 'none')};\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: ${props => (props.active ? 'pointer' : 'default')};\n`\n\nconst Checkers = ({ checkersStore, size = 75 }) => {\n  const availablePositions = checkersStore.getAvailablePositions\n  return (\n    <Wrapper size={size}>\n      {[...Array(8).keys()].map(row =>\n        [...Array(8).keys()].map(column => {\n          const position = { row, column }\n          const availablePosition = R.find(availablePosition =>\n            R.and(\n              R.propEq('row', position.row)(availablePosition),\n              R.propEq('column', position.column)(availablePosition),\n            ),\n          )(availablePositions)\n          return (\n            <Square\n              key={`${row}-${column}`}\n              active={!R.isNil(availablePosition)}\n              dark={(row + column) % 2 !== 0}\n              size={size}\n              onClick={\n                !R.isNil(availablePosition)\n                  ? () => {\n                      checkersStore.move(availablePosition)\n                      moveSound.play()\n                    }\n                  : undefined\n              }\n            >\n              <Piece\n                checker={checkersStore.board[row][column]}\n                position={position}\n              />\n            </Square>\n          )\n        }),\n      )}\n    </Wrapper>\n  )\n}\n\nexport default inject('checkersStore')(observer(Checkers))\n","export default class {\n  constructor(src) {\n    this.sound = new Audio(src)\n  }\n\n  play = () => {\n    this.sound.play()\n  }\n\n  stop = () => {\n    this.sound.pause()\n    this.sound.currentTime = 0\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Provider, observer } from 'mobx-react'\nimport CheckersStore from './stores/CheckersStore'\nimport Checkers from './components/Checkers'\nimport { BLACK } from './constants'\n\nconst checkersStore = new CheckersStore()\n\nconst Wrapper = styled.div`\n  min-height: 100vh;\n  padding: 15px 0;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Title = styled.h1`\n  color: DarkOrange;\n  margin-top: 0;\n  margin-bottom: 10px;\n`\n\nconst Turn = styled.p`\n  color: ${props => (props.code === BLACK ? 'black' : 'white')};\n  margin-top: 0;\n`\n\nconst Link = styled.a`\n  color: DarkOrange;\n  margin-left: 10px;\n  cursor: pointer;\n`\n\nconst App = () => {\n  const winner = checkersStore.getWinner\n  return (\n    <Provider checkersStore={checkersStore}>\n      <Wrapper>\n        <Title>Thai Checkers Game</Title>\n        {winner ? (\n          <Turn code={winner}>\n            {winner === BLACK ? 'black' : 'white'} win!\n            <Link onClick={() => checkersStore.reset()}>play again?</Link>\n          </Turn>\n        ) : (\n          <Turn code={checkersStore.turn}>\n            {checkersStore.turn === BLACK ? 'black' : 'white'} turn\n          </Turn>\n        )}\n        <Checkers />\n      </Wrapper>\n    </Provider>\n  )\n}\n\nexport default observer(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createGlobalStyle } from 'styled-components'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: 'Roboto', sans-serif;\n    background-color: SlateGrey;\n    margin: 0;\n  }\n`\n\nReactDOM.render(\n  <React.Fragment>\n    <GlobalStyle />\n    <App />\n  </React.Fragment>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}